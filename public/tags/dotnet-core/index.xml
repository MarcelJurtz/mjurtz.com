<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotnet-core on Marcel Jurtz</title>
    <link>https://www.mjurtz.com/tags/dotnet-core/</link>
    <description>Recent content in dotnet-core on Marcel Jurtz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 22 Dec 2017 12:00:58 +0000</lastBuildDate><atom:link href="https://www.mjurtz.com/tags/dotnet-core/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# – Mastering the Basics - Extension Methods</title>
      <link>https://www.mjurtz.com/posts/2017-12-22-c-mastering-basics-extension-methods/</link>
      <pubDate>Fri, 22 Dec 2017 12:00:58 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-12-22-c-mastering-basics-extension-methods/</guid>
      <description>In this series, I go over the very basics of the C# programming language. In todays guide, I will focus on writing custom extension methods for existing, prebuilt classes.
You can use extension methods to add custom functionality to classes that are built by others. In my very case, I&amp;rsquo;d like to extend the functionality of the String class to set its first letter to upper case. I already implemented this functionality in my sideproject CryptoFolio, be sure to check out my article on the topic!</description>
    </item>
    
    <item>
      <title>C# – Mastering the Basics – Collections</title>
      <link>https://www.mjurtz.com/posts/2017-12-19-c-mastering-the-basics-collections/</link>
      <pubDate>Tue, 19 Dec 2017 09:30:04 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-12-19-c-mastering-the-basics-collections/</guid>
      <description>Altough the topic &amp;ldquo;Collections&amp;rdquo; matches programming in general, I&amp;rsquo;ve decided to add it to my series on mastering the basics of C#. For this reason, you will find some content here that is generally applicable, but I will also discuss different language-specific elements.
Collections support several different use cases, e. g. searching through a set for objects with certain properties, or iterating through multiple elements by predefined sorting specifications.
In the first part of this article, I will cover the two basic types of collections in C#, lists and dictionaries.</description>
    </item>
    
    <item>
      <title>Getting Started with .NET Core on Arch Linux</title>
      <link>https://www.mjurtz.com/posts/2017-12-16-getting-started-net-core-arch-linux/</link>
      <pubDate>Sat, 16 Dec 2017 16:40:56 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-12-16-getting-started-net-core-arch-linux/</guid>
      <description>Hello Internet! Today, we will try to develop and run .NET Core Apps on a Macbook running Arch Linux! Because what could go wrong!
(Honestly, this went way better than I thought.)
Installation Before we can start writing .NET Core applications on Linux, we need to install some packages. The Arch Wiki states that to run .NET Core applications, the dotnet-runtime package needs to be installed. Additionally, we will need dotnet-sdk-2.</description>
    </item>
    
  </channel>
</rss>
