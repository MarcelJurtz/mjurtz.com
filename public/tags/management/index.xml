<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>management on Marcel Jurtz</title>
    <link>https://www.mjurtz.com/tags/management/</link>
    <description>Recent content in management on Marcel Jurtz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Oct 2018 06:00:00 +0000</lastBuildDate><atom:link href="https://www.mjurtz.com/tags/management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Semantic Versioning</title>
      <link>https://www.mjurtz.com/posts/2018-10-07-semantic-versioning/</link>
      <pubDate>Sun, 07 Oct 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-10-07-semantic-versioning/</guid>
      <description>Have you ever wondered what kind of methodology you should use to label the releases of your software? Many projects use a structure with three numbers, each separated by a dot. I have good news for you: This structure is very common and well documented. It&amp;rsquo;s called Semantic Versioning and you&amp;rsquo;ll find all the details about it here.
Building Version Identifiers with SemVer Version numbers are structured according to the X.</description>
    </item>
    
    <item>
      <title>Building an MVP - You are doing it wrong</title>
      <link>https://www.mjurtz.com/posts/2018-08-26-mvp_youre_doing_it_wrong/</link>
      <pubDate>Sun, 26 Aug 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-08-26-mvp_youre_doing_it_wrong/</guid>
      <description>The term MVP - Minimum Viable Product is no longer a new word. The term was first coined by Frank Robinson in 2001 and is now used very frequently.
The basic idea of an MVP is to make a version of a product available to the customer as quickly as possible. The goal is not to generate sales, but to learn. Of course it&amp;rsquo;s not a bad idea and it&amp;rsquo;s also the intention to earn money with your product, but the idea here is to put yourself in the customer&amp;rsquo;s shoes and better understand their needs and requirements.</description>
    </item>
    
    <item>
      <title>Agile - Get Started with Kanban</title>
      <link>https://www.mjurtz.com/posts/2018-07-21-agile-get-started-with-kanban/</link>
      <pubDate>Sat, 21 Jul 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-07-21-agile-get-started-with-kanban/</guid>
      <description>After I introduced Scrum in my last article, today will be about Kanban. Like Scrum, Kanban is an agile software development methodology and I have to say that I apply the principles I present today to most of my personal side projects.
Kanban is Japanese and can be translated as &amp;ldquo;billboard&amp;rdquo;. Kanban was first introduced by Toyota in the automotive industry and is now mostly associated with just-in-time concepts. But I don&amp;rsquo;t want to bore you with historical details, I want to show you the usage in software development.</description>
    </item>
    
    <item>
      <title>Agile - Get Started with Scrum</title>
      <link>https://www.mjurtz.com/posts/2018-07-15-agile-get-started-with-scrum/</link>
      <pubDate>Sun, 15 Jul 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-07-15-agile-get-started-with-scrum/</guid>
      <description>As a software developer you are certainly aware of Scrum. You may have already used Scrum or heard about it only marginally. With this article I would like to give you an overview of what Scrum is and how you can apply this methodology. Plus: You can also use many of the principles even for working on your side projects alone or in a small group.
Scrum is probably the best known process model of agile software development.</description>
    </item>
    
  </channel>
</rss>
