<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on Marcel Jurtz</title>
    <link>https://www.mjurtz.com/tags/android/</link>
    <description>Recent content in android on Marcel Jurtz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Nov 2018 06:00:00 +0000</lastBuildDate><atom:link href="https://www.mjurtz.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Announcing MTG LifeCounter V2</title>
      <link>https://www.mjurtz.com/posts/2018-11-25-announcing-lifecounter-v2/</link>
      <pubDate>Sun, 25 Nov 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-11-25-announcing-lifecounter-v2/</guid>
      <description>With my LifeCounter app for Magic The Gathering, I released my first Android app on the Google PlayStore over two years ago. Besides my first release, this was also another milestone for me: My first real app. Over two years later, I am proud to announce a completely revamped version of the app. Several complete revisions have taken place in the meantime and I&amp;rsquo;m already planning the next one, as I admittedly tried to learn the MVP pattern with the app and now, a few months later, I&amp;rsquo;m completely dissatisfied and want to switch to MVVM.</description>
    </item>
    
    <item>
      <title>Sideproject - Sist!</title>
      <link>https://www.mjurtz.com/posts/2018-03-28-sideproject-sist/</link>
      <pubDate>Wed, 28 Mar 2018 18:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-03-28-sideproject-sist/</guid>
      <description>It&amp;rsquo;s time to announce a new sideproject-launch!
Some days ago, I&amp;rsquo;ve been looking for an app which allowed my to keep track of shopping lists in a simple and fast way. While there are lots of such apps available for Android, all I tested seemed to be overkill for what I really wanted. So I decided to create my own app for this purpose.
Besides creating a simple app, my goal was to learn something new while developing the app.</description>
    </item>
    
    <item>
      <title>Sideproject: Perfeggt</title>
      <link>https://www.mjurtz.com/posts/2018-03-04-sideproject-perfeggt/</link>
      <pubDate>Sun, 04 Mar 2018 15:17:17 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-03-04-sideproject-perfeggt/</guid>
      <description>Once again, it&amp;rsquo;s time to announce one of my side projects: Pefeggt - A boiling time calculator for eggs. Actually, I&amp;rsquo;ve been sitting on this one for quite a while and I decided to complete a working release this weekend. The app is built for Android and it helps you to calculate the perfect time you need to boil eggs to your preferred consistency.
Functionality &amp;amp; Usage To calculate the time, I&amp;rsquo;m using Charles D.</description>
    </item>
    
    <item>
      <title>Introduction to Room for Android</title>
      <link>https://www.mjurtz.com/posts/2018-02-17-introduction-to-room-for-android/</link>
      <pubDate>Sat, 17 Feb 2018 08:00:46 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-02-17-introduction-to-room-for-android/</guid>
      <description>In the context of I/O 2017, Google released the Room Persistence Library, an intermediate layer between application logic and Android&amp;rsquo;s SQLite database. Using Room, you no longer have to handle stuff like network connection errors or caching yourself. Today&amp;rsquo;s article will help you get started with the library and teach you all the skills you need to implement Room in your own applications.
Background of my sample application The following code snippets are part of one of my side projects.</description>
    </item>
    
    <item>
      <title>Using Androids Recyclerview with Kotlin</title>
      <link>https://www.mjurtz.com/posts/2018-02-11-using-androids-recyclerview-with-kotlin/</link>
      <pubDate>Sun, 11 Feb 2018 16:01:31 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-02-11-using-androids-recyclerview-with-kotlin/</guid>
      <description>Traditionally, you were using a listview to display several homogeneous elements in you Android app. However, this view is now deprecated. Android now offers an alternative, which aims to increase performance by only loading those elements, that are currently rendered on-screen: the RecyclerView.
This article shows you how to get started with the RecyclerView. To make things a bit more interesting, we will be using Kotlin instead of Java.
You can set up an Android project for Kotlin by simply clicking the checkbox for Kotlin support in the new project wizard.</description>
    </item>
    
    <item>
      <title>Xamarin Debugging over WIFI</title>
      <link>https://www.mjurtz.com/posts/2018-01-10-debugging-xamarin-apps-on-physical-device-over-wifi/</link>
      <pubDate>Wed, 10 Jan 2018 06:00:31 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-01-10-debugging-xamarin-apps-on-physical-device-over-wifi/</guid>
      <description>Xamarin utilizes the Android Debug Bridge (ADB) for debugging on physical devices, which are usually connected over usb. While this feature definitely is useful, it would sometimes be more practical if you could do this over WIFI instead.
Luckily, that is possible! You can simple switch between using USB and TCP/IP for debugging. To get started, you need to connect your device via USB to the computer you&amp;rsquo;re debugging from. I&amp;rsquo;m using Windows, so the commands I&amp;rsquo;ll execute the following commands from the commandline (which runs as an administrator), but since they are adb commands, they should be the same on Linux or macOS.</description>
    </item>
    
    <item>
      <title>Validating LiteDB Data from an Android App</title>
      <link>https://www.mjurtz.com/posts/2017-12-14-validating-litedb-data-on-android-application-data/</link>
      <pubDate>Thu, 14 Dec 2017 21:00:28 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-12-14-validating-litedb-data-on-android-application-data/</guid>
      <description>In my new sideproject CryptoFolio, which I announced in this article, I described that I&amp;rsquo;d like to use LiteDB to locally store data that I received from the coinmarketcap-API. LiteDB is basically a NoSQL database, in particular a document store. It functions on a serverless file basis and can be accessed via a simple API.
While it is quite easy to implement the databases functionality itself, testing the resulting data structure is somewhat more difficult.</description>
    </item>
    
    <item>
      <title>Sideproject: CryptoFolio</title>
      <link>https://www.mjurtz.com/posts/2017-12-10-sideproject-cryptofolio/</link>
      <pubDate>Sun, 10 Dec 2017 14:24:38 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-12-10-sideproject-cryptofolio/</guid>
      <description>Today I would like to introduce my current side project. I&amp;rsquo;m currently developing CryptoFolio, an app that allows you to keep track of your investments in cryptocurrencies.
Functionality &amp;amp; MVP The first release of the application will allow you to view the current rates of the top 100 cryptocurrencies with the highest market capitalization. You can then add investments, where input, output and the date of the transaction is recorded.</description>
    </item>
    
    <item>
      <title>Support Multiple Screen Sizes on Android</title>
      <link>https://www.mjurtz.com/posts/2017-11-22-support-multiple-screen-sizes-on-android/</link>
      <pubDate>Wed, 22 Nov 2017 21:22:36 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-11-22-support-multiple-screen-sizes-on-android/</guid>
      <description>Android runs on a variety of different devices. In order to improve the way your app looks on different phones, depending on their screen size and resolution, Android offers the possibility to use different layouts for different screen sizes. This is the topic I&amp;rsquo;ll discuss in this article.
Summarizing the Demo Application First of all, I would like to briefly discuss the app, the optimization of which will be discussed below.</description>
    </item>
    
    <item>
      <title>Reusable Styles for Android</title>
      <link>https://www.mjurtz.com/posts/2017-11-17-reusable-styles-android/</link>
      <pubDate>Fri, 17 Nov 2017 18:00:27 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-11-17-reusable-styles-android/</guid>
      <description>View definitions under android are often used for many different controls. However, there is an easy way to recycle defined styles and use them for other controls, often saving a lot of code. So, styles basically allow you to move your repeatedly used styles out of the layout file into a styles.xml file (which is located in the values-folder). This article covers the basics of using styles on Android.
Think of the following layout, which represents two simple buttons inside a LinearLayout:</description>
    </item>
    
    <item>
      <title>Touch Controls for Unity Game Development</title>
      <link>https://www.mjurtz.com/posts/2017-11-15-touch-controls-unity-game-development/</link>
      <pubDate>Wed, 15 Nov 2017 18:00:46 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-11-15-touch-controls-unity-game-development/</guid>
      <description>Some time ago, I created this game (online playable version) in Unity, and I wanted to be able to play it on my Android phone. Since the input options on the smartphone are slightly different from those on the pc, a certain amount of adjustments were necessary. I won&amp;rsquo;t go over the specific details on the game mechanics, you can check out these on GitHub, they are described in the README file.</description>
    </item>
    
    <item>
      <title>P2P Synchronization with Syncthing</title>
      <link>https://www.mjurtz.com/posts/2017-11-01-p2p-synchronization-with-syncthing/</link>
      <pubDate>Wed, 01 Nov 2017 13:12:23 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-11-01-p2p-synchronization-with-syncthing/</guid>
      <description>Everyone has different programs and tools that they particularly appreciate. One of these programs is syncthing for me, so I will briefly discuss how it works and how it is set up in this article. Syncthing is used to synchronize files between different devices and also supports versioning of these files. Syncthing is available for Windows, Android and as cross-platform wrapper. I personally use it on Windows 10, Arch Linux and Android (via Playstore or FDroid).</description>
    </item>
    
    <item>
      <title>Building an Android App from Scratch using MVP</title>
      <link>https://www.mjurtz.com/posts/2017-09-12-building-android-app-scratch-using-mvp/</link>
      <pubDate>Tue, 12 Sep 2017 06:00:07 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-09-12-building-android-app-scratch-using-mvp/</guid>
      <description>In this article, I&amp;rsquo;ll document the process of building an android app from scratch by using the MVP approach of clean architecture. The app itself will represent a minimalistic umpire indicator for tracking baseball games. Please consider using this in the dugout only. Since this will be a longer post, you can use the following links to jump between sections.
 What is MVP? Background on the app to be built Constructing the GUI Managing interfaces Building the model Connecting view and model by adding the presenter  1.</description>
    </item>
    
  </channel>
</rss>
