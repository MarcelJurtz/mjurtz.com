<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on Marcel Jurtz</title>
    <link>https://www.mjurtz.com/categories/tools/</link>
    <description>Recent content in tools on Marcel Jurtz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 31 Mar 2019 06:00:00 +0000</lastBuildDate><atom:link href="https://www.mjurtz.com/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Database Modeling with dbdiagram.io</title>
      <link>https://www.mjurtz.com/posts/2019-03-31-database-modeling-with-dbdiagram-io/</link>
      <pubDate>Sun, 31 Mar 2019 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2019-03-31-database-modeling-with-dbdiagram-io/</guid>
      <description>Today I would like to briefly introduce you to a Web application, which I have been stumpled across. I&amp;rsquo;ve tried several tools for db modeling, some more and some less appealing.
Well, the tool doesn&amp;rsquo;t offer explicit ER modeling, but a SQL-like structure and allows you to import and export directly to SQL and other formats.
You can find the app I&amp;rsquo;m talking about on dbdiagram.io. The website offers a simple graphical interface, which includes a code editor and a graphical representation of the table structure.</description>
    </item>
    
    <item>
      <title>Using GitHub over SSH on public WIFI</title>
      <link>https://www.mjurtz.com/posts/2018-01-29-how-to-use-github-over-ssh-on-public-wifi/</link>
      <pubDate>Mon, 29 Jan 2018 06:00:11 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-01-29-how-to-use-github-over-ssh-on-public-wifi/</guid>
      <description>When using GitHub via SSH, port 22 will be used per default. However, often times you&amp;rsquo;ll see this port being blocked on public WIFI networks. On a Linux machine, there is a simple way to change the default port.
To test if our plan works out, you can use the following command:
bash &amp;gt;ssh -T -p 443 git@ssh.github.com
This will test the ssh connection by using port 443. If this returns a positive result, you can change the port in your ssh config file.</description>
    </item>
    
    <item>
      <title>Installing MagicaVoxel on Linux</title>
      <link>https://www.mjurtz.com/posts/2018-01-20-install-magicavoxel-on-linux/</link>
      <pubDate>Sat, 20 Jan 2018 06:00:57 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-01-20-install-magicavoxel-on-linux/</guid>
      <description>As a programmer with definite lack of visual skills, MagicaVoxel is a gift from God to create usable 3D models. Unfortunately, there is no installation option for Linux on the official website. With the help of Wine it is possible to use MagicaVoxel under Linux. And it really works great!
Installation Prerequisites As I said you need to run Wine. As stated on their landing page, Wine is a compatibility layer that allows Windows applications to run under POSIX-compliant operating systems such as Linux, macOS and BSD.</description>
    </item>
    
    <item>
      <title>Advanced Git - Git Stash</title>
      <link>https://www.mjurtz.com/posts/2018-01-08-advanced-git-git-stash/</link>
      <pubDate>Mon, 08 Jan 2018 06:00:26 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-01-08-advanced-git-git-stash/</guid>
      <description>In my introductory post on git, I told you that git uses three areas to track changes. Well, maybe I lied to you in this case. There are actually four areas available and I will cover this fourth area in todays post.
The fourth area is called Stash. Basically, it works like a clipboard to which you can save current changes.
Concepts of the Stash &amp;hellip; Imagine the following scenario: You are working on a change.</description>
    </item>
    
    <item>
      <title>Advanced Git - Git Reset</title>
      <link>https://www.mjurtz.com/posts/2018-01-04-advanced-git-git-reset/</link>
      <pubDate>Thu, 04 Jan 2018 19:09:23 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-01-04-advanced-git-git-reset/</guid>
      <description>In one of my earliest posts, I wrote an introduction to version control, more specifically: git. The topic I will cover today extends this article by a topic which is actually not that complicated. However, people seem to find it hard to deal with it and use it as a highway to StackOverflow.
I talk about git reset. This command can be used to reset changes in your working area or to remove staged files from the index.</description>
    </item>
    
    <item>
      <title>P2P Synchronization with Syncthing</title>
      <link>https://www.mjurtz.com/posts/2017-11-01-p2p-synchronization-with-syncthing/</link>
      <pubDate>Wed, 01 Nov 2017 13:12:23 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-11-01-p2p-synchronization-with-syncthing/</guid>
      <description>Everyone has different programs and tools that they particularly appreciate. One of these programs is syncthing for me, so I will briefly discuss how it works and how it is set up in this article. Syncthing is used to synchronize files between different devices and also supports versioning of these files. Syncthing is available for Windows, Android and as cross-platform wrapper. I personally use it on Windows 10,Â Arch Linux and Android (via Playstore or FDroid).</description>
    </item>
    
    <item>
      <title>Windows Package Management</title>
      <link>https://www.mjurtz.com/posts/2017-10-10-windows-package-management/</link>
      <pubDate>Tue, 10 Oct 2017 11:58:04 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-10-10-windows-package-management/</guid>
      <description>As a Windows user with Linux knowledge there are several things under Linux that I would like to have on for Windows. Since a complete switch from Windows to Linux is not feasible for me due to different requirements, I looked for alternatives. An important component of various Linux distributions is their package manager. This article discusses the implementation of such a feature under Windows and shows how it can be used.</description>
    </item>
    
    <item>
      <title>Sublime Text 3 for Atom Users</title>
      <link>https://www.mjurtz.com/posts/2017-09-17-sublime-text-3-atom-users/</link>
      <pubDate>Sun, 17 Sep 2017 15:06:13 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-09-17-sublime-text-3-atom-users/</guid>
      <description>Due to the release of Sublime Text 3, I thought I&amp;rsquo;ll give this editor a shot. Currently, I&amp;rsquo;m using both Notepad++ and Atom. Altough I really like atom and the several useful plugins, it has one huge problem: speed. The initial loading time is one thing, over 100 mb. of RAM in idle mode is another. For quickly editing stuff, this is not acceptable.
Sublime Text seems to be a nice alternative, this article documents my switch from Atom to Sublime Text.</description>
    </item>
    
    <item>
      <title>How to set up ssh for git</title>
      <link>https://www.mjurtz.com/posts/2017-09-11-set-ssh-git/</link>
      <pubDate>Mon, 11 Sep 2017 08:04:02 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-09-11-set-ssh-git/</guid>
      <description>When using github, you usually have to enter your login credentials each time you push. You could solve this problem by saving the credentials or by setting up ssh for your account. In this post, the process of adding and using ssh keys will be explained.
I&amp;rsquo;m using git bash, if you use git gui/sourcetree/etc. you should consider switching, at least for this process.
At first, SSH keys are generated. The command for this is the following:</description>
    </item>
    
    <item>
      <title>Getting started with Git</title>
      <link>https://www.mjurtz.com/posts/2017-09-10-getting-started-git/</link>
      <pubDate>Sun, 10 Sep 2017 10:45:42 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2017-09-10-getting-started-git/</guid>
      <description>This post represents an overview of version control with git. The mentioned commands and parameters are only a small part of what&amp;rsquo;s possible. Git is a popular system for version control. Projects on git are called Repositories. Repositories can be used local or with a server. There are several free hosters, for example:
 Github GitLab BitBucket  Installation  Linux (Debian-based)  apt-get install git-all  Windows Mac  Elements Git-Repositories are separated into working directory, staging area and repository.</description>
    </item>
    
  </channel>
</rss>
