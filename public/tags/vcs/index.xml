<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vcs on Marcel Jurtz</title>
    <link>https://www.mjurtz.com/tags/vcs/</link>
    <description>Recent content in vcs on Marcel Jurtz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Sep 2018 06:00:00 +0000</lastBuildDate><atom:link href="https://www.mjurtz.com/tags/vcs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Workflows</title>
      <link>https://www.mjurtz.com/posts/2018-09-30-git-workflows/</link>
      <pubDate>Sun, 30 Sep 2018 06:00:00 +0000</pubDate>
      
      <guid>https://www.mjurtz.com/posts/2018-09-30-git-workflows/</guid>
      <description>Almost all programming projects work with some kind of version control. When I started to work with Git, I used the tool also directly for my private projects. But especially at the beginning I found it hard to structure my commits and branches in a practical way. For this reason I would like to show you some common strategies today, the so-called Git Workflows.
Simple Workflow The simple workflow consists of a single master branch.</description>
    </item>
    
  </channel>
</rss>
